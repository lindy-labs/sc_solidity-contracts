{
  "language": "Solidity",
  "sources": {
    "contracts/interfaces/liquity/IPriceFeed.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.10;\n\ninterface IPriceFeed {\n\n    // --- Events ---\n    event LastGoodPriceUpdated(uint _lastGoodPrice);\n\n    // --- Function ---\n    function fetchPrice() external returns (uint);\n}\n"
    },
    "contracts/mock/liquity/MockLiquityPriceFeed.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity =0.8.10;\n\nimport \"../../interfaces/liquity/IPriceFeed.sol\";\n\ncontract MockLiquityPriceFeed is IPriceFeed {\n    string constant public NAME = \"PriceFeed\";\n\n    uint public lastGoodPrice;\n\n    function fetchPrice() external view override returns (uint) {\n        return lastGoodPrice;\n    }\n\n    function setPrice(uint price) external {\n        lastGoodPrice = price;\n\n        emit LastGoodPriceUpdated(lastGoodPrice);\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 1000
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates",
          "devdoc",
          "userdoc",
          "devdoc",
          "userdoc",
          "devdoc",
          "userdoc",
          "devdoc",
          "userdoc"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    },
    "libraries": {}
  }
}