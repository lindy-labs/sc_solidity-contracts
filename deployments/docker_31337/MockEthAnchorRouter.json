{"metadata":"{\"compiler\":{\"version\":\"0.8.10\"},\"sources\":{\"contracts/mock/MockEthAnchorRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity =0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"../strategy/anchor/IEthAnchorRouter.sol\\\";\\n\\ncontract MockEthAnchorRouter is IEthAnchorRouter {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public ustToken;\\n    IERC20 public aUstToken;\\n\\n    address public pendingOperator;\\n    mapping(address => uint256) public depositOperations;\\n    mapping(address => uint256) public redeemOperations;\\n    mapping(address => uint256) public depositFinishResults;\\n    mapping(address => uint256) public redeemFinishResults;\\n\\n    constructor(IERC20 _ustToken, IERC20 _aUstToken) {\\n        require(address(_ustToken) != address(0), \\\"invalid UST token\\\");\\n        require(address(_aUstToken) != address(0), \\\"invalid aUST token\\\");\\n\\n        ustToken = _ustToken;\\n        aUstToken = _aUstToken;\\n    }\\n\\n    function addPendingOperator(address _operator) external {\\n        require(_operator != address(0), \\\"invalid operator\\\");\\n\\n        pendingOperator = _operator;\\n    }\\n\\n    function initDepositStable(uint256 _amount)\\n        external\\n        override(IEthAnchorRouter)\\n        returns (address operator)\\n    {\\n        require(\\n            pendingOperator != address(0),\\n            \\\"pendingOperator cannot be null address\\\"\\n        );\\n        ustToken.safeTransferFrom(msg.sender, address(this), _amount);\\n        depositOperations[pendingOperator] = _amount;\\n        operator = pendingOperator;\\n        pendingOperator = address(0);\\n    }\\n\\n    function notifyDepositResult(address _operation, uint256 _amount) external {\\n        require(depositOperations[_operation] != 0);\\n        aUstToken.safeTransferFrom(msg.sender, address(this), _amount);\\n        depositOperations[_operation] = 0;\\n        depositFinishResults[_operation] = _amount;\\n    }\\n\\n    function finishDepositStable(address _operation)\\n        external\\n        override(IEthAnchorRouter)\\n    {\\n        aUstToken.safeTransfer(msg.sender, depositFinishResults[_operation]);\\n        depositFinishResults[_operation] = 0;\\n    }\\n\\n    function initRedeemStable(uint256 _amount)\\n        external\\n        override(IEthAnchorRouter)\\n        returns (address operator)\\n    {\\n        require(pendingOperator != address(0));\\n        aUstToken.safeTransferFrom(msg.sender, address(this), _amount);\\n        redeemOperations[pendingOperator] = _amount;\\n        operator = pendingOperator;\\n        pendingOperator = address(0);\\n    }\\n\\n    function notifyRedeemResult(address _operation, uint256 _amount) external {\\n        require(redeemOperations[_operation] != 0);\\n        ustToken.safeTransferFrom(msg.sender, address(this), _amount);\\n        redeemOperations[_operation] = 0;\\n        redeemFinishResults[_operation] = _amount;\\n    }\\n\\n    function finishRedeemStable(address _operation) external override {\\n        ustToken.safeTransfer(msg.sender, redeemFinishResults[_operation]);\\n        redeemFinishResults[_operation] = 0;\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\"},\"contracts/strategy/anchor/IEthAnchorRouter.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity =0.8.10;\\n\\ninterface IEthAnchorRouter {\\n    function initDepositStable(uint256 _amount) external returns (address);\\n\\n    function finishDepositStable(address _operation) external;\\n\\n    function initRedeemStable(uint256 _amount) external returns (address);\\n\\n    function finishRedeemStable(address _operation) external;\\n}\\n\"}}}","address":"0xdf3079e3c5384a03aF7aBABDeC7824826C0ED890","bytecode":"0x608060405234801561001057600080fd5b50604051610ba0380380610ba083398101604081905261002f91610116565b6001600160a01b03821661007e5760405162461bcd60e51b815260206004820152601160248201527034b73b30b634b2102aa9aa103a37b5b2b760791b60448201526064015b60405180910390fd5b6001600160a01b0381166100c95760405162461bcd60e51b815260206004820152601260248201527134b73b30b634b21030aaa9aa103a37b5b2b760711b6044820152606401610075565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055610149565b80516001600160a01b038116811461011157600080fd5b919050565b6000806040838503121561012957600080fd5b610132836100fa565b9150610140602084016100fa565b90509250929050565b610a48806101586000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a18b8f961161008c578063ac7e534e11610066578063ac7e534e146101e7578063bb0b8e1d146101fa578063e71f468d1461021a578063ed30abd11461023a57600080fd5b8063a18b8f9614610193578063a8a15a21146101c1578063ac1a2322146101d457600080fd5b80637249abb9116100c85780637249abb914610147578063781338c01461015a5780638278749b1461016d578063949103471461018057600080fd5b806307caf901146100ef5780631bbec15e1461011f57806333d7841e14610132575b600080fd5b6101026100fd3660046108fb565b61025a565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610102906001600160a01b031681565b610145610140366004610930565b6102cd565b005b61014561015536600461095a565b610330565b600054610102906001600160a01b031681565b61014561017b36600461095a565b610373565b61014561018e366004610930565b6103fd565b6101b36101a136600461095a565b60036020526000908152604090205481565b604051908152602001610116565b6101026101cf3660046108fb565b610460565b6101456101e236600461095a565b61053c565b600254610102906001600160a01b031681565b6101b361020836600461095a565b60046020526000908152604090205481565b6101b361022836600461095a565b60066020526000908152604090205481565b6101b361024836600461095a565b60056020526000908152604090205481565b6002546000906001600160a01b031661027257600080fd5b60015461028a906001600160a01b0316333085610580565b50600280546001600160a01b03908116600090815260046020526040902092909255805473ffffffffffffffffffffffffffffffffffffffff1981169091551690565b6001600160a01b0382166000908152600460205260409020546102ef57600080fd5b600054610307906001600160a01b0316333084610580565b6001600160a01b0390911660009081526004602090815260408083208390556006909152902055565b6001600160a01b0380821660009081526006602052604081205490546103599216903390610637565b6001600160a01b0316600090815260066020526040812055565b6001600160a01b0381166103ce5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206f70657261746f720000000000000000000000000000000060448201526064015b60405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526003602052604090205461041f57600080fd5b600154610437906001600160a01b0316333084610580565b6001600160a01b0390911660009081526003602090815260408083208390556005909152902055565b6002546000906001600160a01b03166104e15760405162461bcd60e51b815260206004820152602660248201527f70656e64696e674f70657261746f722063616e6e6f74206265206e756c6c206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103c5565b6000546104f9906001600160a01b0316333085610580565b50600280546001600160a01b03908116600090815260036020526040902092909255805473ffffffffffffffffffffffffffffffffffffffff1981169091551690565b6001600160a01b038082166000908152600560205260409020546001546105669216903390610637565b6001600160a01b0316600090815260056020526040812055565b6040516001600160a01b03808516602483015283166044820152606481018290526106319085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610685565b50505050565b6040516001600160a01b0383166024820152604481018290526106809084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016105cd565b505050565b60006106da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661076a9092919063ffffffff16565b80519091501561068057808060200190518101906106f89190610975565b6106805760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103c5565b60606107798484600085610783565b90505b9392505050565b6060824710156107fb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103c5565b843b6108495760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c5565b600080866001600160a01b0316858760405161086591906109c3565b60006040518083038185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b50915091506108b78282866108c2565b979650505050505050565b606083156108d157508161077c565b8251156108e15782518084602001fd5b8160405162461bcd60e51b81526004016103c591906109df565b60006020828403121561090d57600080fd5b5035919050565b80356001600160a01b038116811461092b57600080fd5b919050565b6000806040838503121561094357600080fd5b61094c83610914565b946020939093013593505050565b60006020828403121561096c57600080fd5b61077c82610914565b60006020828403121561098757600080fd5b8151801515811461077c57600080fd5b60005b838110156109b257818101518382015260200161099a565b838111156106315750506000910152565b600082516109d5818460208701610997565b9190910192915050565b60208152600082518060208401526109fe816040850160208701610997565b601f01601f1916919091016040019291505056fea2646970667358221220d3fe35aea601aeb68a1ef4f07e95f3ad9f5b25106be6b2ca91f8cb6725c5a1d064736f6c634300080a0033","deployedBytecode":"0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063a18b8f961161008c578063ac7e534e11610066578063ac7e534e146101e7578063bb0b8e1d146101fa578063e71f468d1461021a578063ed30abd11461023a57600080fd5b8063a18b8f9614610193578063a8a15a21146101c1578063ac1a2322146101d457600080fd5b80637249abb9116100c85780637249abb914610147578063781338c01461015a5780638278749b1461016d578063949103471461018057600080fd5b806307caf901146100ef5780631bbec15e1461011f57806333d7841e14610132575b600080fd5b6101026100fd3660046108fb565b61025a565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610102906001600160a01b031681565b610145610140366004610930565b6102cd565b005b61014561015536600461095a565b610330565b600054610102906001600160a01b031681565b61014561017b36600461095a565b610373565b61014561018e366004610930565b6103fd565b6101b36101a136600461095a565b60036020526000908152604090205481565b604051908152602001610116565b6101026101cf3660046108fb565b610460565b6101456101e236600461095a565b61053c565b600254610102906001600160a01b031681565b6101b361020836600461095a565b60046020526000908152604090205481565b6101b361022836600461095a565b60066020526000908152604090205481565b6101b361024836600461095a565b60056020526000908152604090205481565b6002546000906001600160a01b031661027257600080fd5b60015461028a906001600160a01b0316333085610580565b50600280546001600160a01b03908116600090815260046020526040902092909255805473ffffffffffffffffffffffffffffffffffffffff1981169091551690565b6001600160a01b0382166000908152600460205260409020546102ef57600080fd5b600054610307906001600160a01b0316333084610580565b6001600160a01b0390911660009081526004602090815260408083208390556006909152902055565b6001600160a01b0380821660009081526006602052604081205490546103599216903390610637565b6001600160a01b0316600090815260066020526040812055565b6001600160a01b0381166103ce5760405162461bcd60e51b815260206004820152601060248201527f696e76616c6964206f70657261746f720000000000000000000000000000000060448201526064015b60405180910390fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526003602052604090205461041f57600080fd5b600154610437906001600160a01b0316333084610580565b6001600160a01b0390911660009081526003602090815260408083208390556005909152902055565b6002546000906001600160a01b03166104e15760405162461bcd60e51b815260206004820152602660248201527f70656e64696e674f70657261746f722063616e6e6f74206265206e756c6c206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016103c5565b6000546104f9906001600160a01b0316333085610580565b50600280546001600160a01b03908116600090815260036020526040902092909255805473ffffffffffffffffffffffffffffffffffffffff1981169091551690565b6001600160a01b038082166000908152600560205260409020546001546105669216903390610637565b6001600160a01b0316600090815260056020526040812055565b6040516001600160a01b03808516602483015283166044820152606481018290526106319085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610685565b50505050565b6040516001600160a01b0383166024820152604481018290526106809084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016105cd565b505050565b60006106da826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661076a9092919063ffffffff16565b80519091501561068057808060200190518101906106f89190610975565b6106805760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103c5565b60606107798484600085610783565b90505b9392505050565b6060824710156107fb5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103c5565b843b6108495760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c5565b600080866001600160a01b0316858760405161086591906109c3565b60006040518083038185875af1925050503d80600081146108a2576040519150601f19603f3d011682016040523d82523d6000602084013e6108a7565b606091505b50915091506108b78282866108c2565b979650505050505050565b606083156108d157508161077c565b8251156108e15782518084602001fd5b8160405162461bcd60e51b81526004016103c591906109df565b60006020828403121561090d57600080fd5b5035919050565b80356001600160a01b038116811461092b57600080fd5b919050565b6000806040838503121561094357600080fd5b61094c83610914565b946020939093013593505050565b60006020828403121561096c57600080fd5b61077c82610914565b60006020828403121561098757600080fd5b8151801515811461077c57600080fd5b60005b838110156109b257818101518382015260200161099a565b838111156106315750506000910152565b600082516109d5818460208701610997565b9190910192915050565b60208152600082518060208401526109fe816040850160208701610997565b601f01601f1916919091016040019291505056fea2646970667358221220d3fe35aea601aeb68a1ef4f07e95f3ad9f5b25106be6b2ca91f8cb6725c5a1d064736f6c634300080a0033","abi":[{"inputs":[{"internalType":"contract IERC20","name":"_ustToken","type":"address"},{"internalType":"contract IERC20","name":"_aUstToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"aUstToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_operator","type":"address"}],"name":"addPendingOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"depositFinishResults","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"depositOperations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_operation","type":"address"}],"name":"finishDepositStable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operation","type":"address"}],"name":"finishRedeemStable","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"initDepositStable","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"initRedeemStable","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operation","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"notifyDepositResult","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_operation","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"notifyRedeemResult","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"pendingOperator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"redeemFinishResults","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"redeemOperations","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ustToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}