// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FinishDepositStable extends ethereum.Event {
  get params(): FinishDepositStable__Params {
    return new FinishDepositStable__Params(this);
  }
}

export class FinishDepositStable__Params {
  _event: FinishDepositStable;

  constructor(event: FinishDepositStable) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ustAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get aUstAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FinishRedeemStable extends ethereum.Event {
  get params(): FinishRedeemStable__Params {
    return new FinishRedeemStable__Params(this);
  }
}

export class FinishRedeemStable__Params {
  _event: FinishRedeemStable;

  constructor(event: FinishRedeemStable) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get aUstAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ustAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get underlyingAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class InitDepositStable extends ethereum.Event {
  get params(): InitDepositStable__Params {
    return new InitDepositStable__Params(this);
  }
}

export class InitDepositStable__Params {
  _event: InitDepositStable;

  constructor(event: InitDepositStable) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get idx(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get underlyingAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get ustAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class InitRedeemStable extends ethereum.Event {
  get params(): InitRedeemStable__Params {
    return new InitRedeemStable__Params(this);
  }
}

export class InitRedeemStable__Params {
  _event: InitRedeemStable;

  constructor(event: InitRedeemStable) {
    this._event = event;
  }

  get operator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get idx(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get aUstAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RearrangeDepositOperation extends ethereum.Event {
  get params(): RearrangeDepositOperation__Params {
    return new RearrangeDepositOperation__Params(this);
  }
}

export class RearrangeDepositOperation__Params {
  _event: RearrangeDepositOperation;

  constructor(event: RearrangeDepositOperation) {
    this._event = event;
  }

  get operatorFrom(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operatorTo(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newIdx(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RearrangeRedeemOperation extends ethereum.Event {
  get params(): RearrangeRedeemOperation__Params {
    return new RearrangeRedeemOperation__Params(this);
  }
}

export class RearrangeRedeemOperation__Params {
  _event: RearrangeRedeemOperation;

  constructor(event: RearrangeRedeemOperation) {
    this._event = event;
  }

  get operatorFrom(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get operatorTo(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newIdx(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class AnchorStrategy__depositOperationsResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AnchorStrategy__redeemOperationsResult {
  value0: Address;
  value1: BigInt;

  constructor(value0: Address, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class AnchorStrategy extends ethereum.SmartContract {
  static bind(address: Address): AnchorStrategy {
    return new AnchorStrategy("AnchorStrategy", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MANAGER_ROLE(): Bytes {
    let result = super.call("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_MANAGER_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("MANAGER_ROLE", "MANAGER_ROLE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  aUstToUstFeed(): Address {
    let result = super.call("aUstToUstFeed", "aUstToUstFeed():(address)", []);

    return result[0].toAddress();
  }

  try_aUstToUstFeed(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "aUstToUstFeed",
      "aUstToUstFeed():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  aUstToken(): Address {
    let result = super.call("aUstToken", "aUstToken():(address)", []);

    return result[0].toAddress();
  }

  try_aUstToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("aUstToken", "aUstToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  depositOperationLength(): BigInt {
    let result = super.call(
      "depositOperationLength",
      "depositOperationLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_depositOperationLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "depositOperationLength",
      "depositOperationLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  depositOperations(param0: BigInt): AnchorStrategy__depositOperationsResult {
    let result = super.call(
      "depositOperations",
      "depositOperations(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new AnchorStrategy__depositOperationsResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_depositOperations(
    param0: BigInt
  ): ethereum.CallResult<AnchorStrategy__depositOperationsResult> {
    let result = super.tryCall(
      "depositOperations",
      "depositOperations(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AnchorStrategy__depositOperationsResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  ethAnchorRouter(): Address {
    let result = super.call(
      "ethAnchorRouter",
      "ethAnchorRouter():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_ethAnchorRouter(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ethAnchorRouter",
      "ethAnchorRouter():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasAssets(): boolean {
    let result = super.call("hasAssets", "hasAssets():(bool)", []);

    return result[0].toBoolean();
  }

  try_hasAssets(): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasAssets", "hasAssets():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  investedAssets(): BigInt {
    let result = super.call("investedAssets", "investedAssets():(uint256)", []);

    return result[0].toBigInt();
  }

  try_investedAssets(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "investedAssets",
      "investedAssets():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pendingDeposits(): BigInt {
    let result = super.call(
      "pendingDeposits",
      "pendingDeposits():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_pendingDeposits(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingDeposits",
      "pendingDeposits():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  pendingRedeems(): BigInt {
    let result = super.call("pendingRedeems", "pendingRedeems():(uint256)", []);

    return result[0].toBigInt();
  }

  try_pendingRedeems(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingRedeems",
      "pendingRedeems():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redeemOperationLength(): BigInt {
    let result = super.call(
      "redeemOperationLength",
      "redeemOperationLength():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_redeemOperationLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "redeemOperationLength",
      "redeemOperationLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  redeemOperations(param0: BigInt): AnchorStrategy__redeemOperationsResult {
    let result = super.call(
      "redeemOperations",
      "redeemOperations(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new AnchorStrategy__redeemOperationsResult(
      result[0].toAddress(),
      result[1].toBigInt()
    );
  }

  try_redeemOperations(
    param0: BigInt
  ): ethereum.CallResult<AnchorStrategy__redeemOperationsResult> {
    let result = super.tryCall(
      "redeemOperations",
      "redeemOperations(uint256):(address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new AnchorStrategy__redeemOperationsResult(
        value[0].toAddress(),
        value[1].toBigInt()
      )
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ustToken(): Address {
    let result = super.call("ustToken", "ustToken():(address)", []);

    return result[0].toAddress();
  }

  try_ustToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("ustToken", "ustToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vault(): Address {
    let result = super.call("vault", "vault():(address)", []);

    return result[0].toAddress();
  }

  try_vault(): ethereum.CallResult<Address> {
    let result = super.tryCall("vault", "vault():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _ethAnchorRouter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _aUstToUstFeed(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _ustToken(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _aUstToken(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class FinishDepositStableCall extends ethereum.Call {
  get inputs(): FinishDepositStableCall__Inputs {
    return new FinishDepositStableCall__Inputs(this);
  }

  get outputs(): FinishDepositStableCall__Outputs {
    return new FinishDepositStableCall__Outputs(this);
  }
}

export class FinishDepositStableCall__Inputs {
  _call: FinishDepositStableCall;

  constructor(call: FinishDepositStableCall) {
    this._call = call;
  }

  get idx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinishDepositStableCall__Outputs {
  _call: FinishDepositStableCall;

  constructor(call: FinishDepositStableCall) {
    this._call = call;
  }
}

export class FinishRedeemStableCall extends ethereum.Call {
  get inputs(): FinishRedeemStableCall__Inputs {
    return new FinishRedeemStableCall__Inputs(this);
  }

  get outputs(): FinishRedeemStableCall__Outputs {
    return new FinishRedeemStableCall__Outputs(this);
  }
}

export class FinishRedeemStableCall__Inputs {
  _call: FinishRedeemStableCall;

  constructor(call: FinishRedeemStableCall) {
    this._call = call;
  }

  get idx(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FinishRedeemStableCall__Outputs {
  _call: FinishRedeemStableCall;

  constructor(call: FinishRedeemStableCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitRedeemStableCall extends ethereum.Call {
  get inputs(): InitRedeemStableCall__Inputs {
    return new InitRedeemStableCall__Inputs(this);
  }

  get outputs(): InitRedeemStableCall__Outputs {
    return new InitRedeemStableCall__Outputs(this);
  }
}

export class InitRedeemStableCall__Inputs {
  _call: InitRedeemStableCall;

  constructor(call: InitRedeemStableCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InitRedeemStableCall__Outputs {
  _call: InitRedeemStableCall;

  constructor(call: InitRedeemStableCall) {
    this._call = call;
  }
}

export class InvestCall extends ethereum.Call {
  get inputs(): InvestCall__Inputs {
    return new InvestCall__Inputs(this);
  }

  get outputs(): InvestCall__Outputs {
    return new InvestCall__Outputs(this);
  }
}

export class InvestCall__Inputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }
}

export class InvestCall__Outputs {
  _call: InvestCall;

  constructor(call: InvestCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class WithdrawAllToVaultCall extends ethereum.Call {
  get inputs(): WithdrawAllToVaultCall__Inputs {
    return new WithdrawAllToVaultCall__Inputs(this);
  }

  get outputs(): WithdrawAllToVaultCall__Outputs {
    return new WithdrawAllToVaultCall__Outputs(this);
  }
}

export class WithdrawAllToVaultCall__Inputs {
  _call: WithdrawAllToVaultCall;

  constructor(call: WithdrawAllToVaultCall) {
    this._call = call;
  }
}

export class WithdrawAllToVaultCall__Outputs {
  _call: WithdrawAllToVaultCall;

  constructor(call: WithdrawAllToVaultCall) {
    this._call = call;
  }
}

export class WithdrawToVaultCall extends ethereum.Call {
  get inputs(): WithdrawToVaultCall__Inputs {
    return new WithdrawToVaultCall__Inputs(this);
  }

  get outputs(): WithdrawToVaultCall__Outputs {
    return new WithdrawToVaultCall__Outputs(this);
  }
}

export class WithdrawToVaultCall__Inputs {
  _call: WithdrawToVaultCall;

  constructor(call: WithdrawToVaultCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawToVaultCall__Outputs {
  _call: WithdrawToVaultCall;

  constructor(call: WithdrawToVaultCall) {
    this._call = call;
  }
}
