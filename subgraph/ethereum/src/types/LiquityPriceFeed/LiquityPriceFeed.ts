// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LastGoodPriceUpdated extends ethereum.Event {
  get params(): LastGoodPriceUpdated__Params {
    return new LastGoodPriceUpdated__Params(this);
  }
}

export class LastGoodPriceUpdated__Params {
  _event: LastGoodPriceUpdated;

  constructor(event: LastGoodPriceUpdated) {
    this._event = event;
  }

  get _lastGoodPrice(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LiquityPriceFeed extends ethereum.SmartContract {
  static bind(address: Address): LiquityPriceFeed {
    return new LiquityPriceFeed("LiquityPriceFeed", address);
  }

  NAME(): string {
    let result = super.call("NAME", "NAME():(string)", []);

    return result[0].toString();
  }

  try_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall("NAME", "NAME():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  fetchPrice(): BigInt {
    let result = super.call("fetchPrice", "fetchPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_fetchPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("fetchPrice", "fetchPrice():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lastGoodPrice(): BigInt {
    let result = super.call("lastGoodPrice", "lastGoodPrice():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastGoodPrice(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastGoodPrice",
      "lastGoodPrice():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class SetPriceCall extends ethereum.Call {
  get inputs(): SetPriceCall__Inputs {
    return new SetPriceCall__Inputs(this);
  }

  get outputs(): SetPriceCall__Outputs {
    return new SetPriceCall__Outputs(this);
  }
}

export class SetPriceCall__Inputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }

  get price(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPriceCall__Outputs {
  _call: SetPriceCall;

  constructor(call: SetPriceCall) {
    this._call = call;
  }
}
