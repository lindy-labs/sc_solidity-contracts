type Vault @entity {
  id: ID!
  underlying: Bytes!
  totalShares: BigInt!
  foundations: [Foundation!]! @derivedFrom(field: "vault")
  claimers: [Claimer!]! @derivedFrom(field: "vault")
  treasury: Bytes
  strategy: Bytes
  amountClaimed: BigInt!
}

type Foundation @entity {
  id: ID!
  name: String!
  owner: Bytes!
  vault: Vault!
  deposits: [Deposit!]! @derivedFrom(field: "foundation")
  amountDeposited: BigInt!
  initialAmountDeposited: BigInt!
  shares: BigInt!
  amountClaimed: BigInt!
  lockedUntil: BigInt!
  createdAt: BigInt!
}

type Deposit @entity {
  id: ID!
  vault: Vault!
  amount: BigInt!
  amountClaimed: BigInt!
  initialAmount: BigInt!
  claimer: Claimer!
  depositor: Bytes!
  foundation: Foundation!
  lockedUntil: BigInt!
  shares: BigInt!
  data: Bytes!
  burned: Boolean!
  burnedAt: BigInt!
}

type Claimer @entity {
  id: ID!
  owner: Bytes!
  vault: Vault!
  deposits: [Deposit!]! @derivedFrom(field: "claimer")
  depositsIds: [String!]!
  principal: BigInt!
  shares: BigInt!
  claimed: BigInt!
}

type Donation @entity {
  id: ID!
  vault: Vault!
  txHash: Bytes!
  amount: BigInt!
  owner: Bytes!
  destination: Bytes!
}

type DonationMint @entity {
  id: ID!
  burned: Boolean!
  nftId: BigInt
}

type Sponsor @entity {
  id: ID!
  vault: Vault!
  depositor: Bytes!
  amount: BigInt!
  lockedUntil: BigInt!
  burned: Boolean!
}

type Liquidation @entity {
  id: ID!
  timestamp: BigInt!
  txHash: Bytes!
  liquidatedDebt: BigInt!
  liquidatedCollateral: BigInt!
  collGasCompensation: BigInt!
  tokenGasCompensation: BigInt!
  strategyBalance: BigInt!
  ethPrice: BigInt!
  highestPrice: BigInt!
}

type LiquidationState @entity {
  id: ID!
  highestPrice: BigInt!
  priceFeed: Bytes
  lastBlock: BigInt!
}
